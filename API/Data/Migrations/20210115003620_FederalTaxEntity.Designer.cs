// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210115003620_FederalTaxEntity")]
    partial class FederalTaxEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-rc.2.20475.6");

            modelBuilder.Entity("API.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("API.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClassName")
                        .HasColumnType("TEXT");

                    b.Property<int>("ClassNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClassWaitingPeriod")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsHsaClass")
                        .HasColumnType("INTEGER");

                    b.Property<double>("PersonalHealthMaximum")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("API.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CommencementDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("GroupTerminationDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IncludeCostPlusClaims")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IncludeHsaClaims")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("YearEndDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("API.Entities.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContactPersonEmailAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactPersonFax")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactPersonName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactPersonPhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactPersonPhoneNumberExt")
                        .HasColumnType("TEXT");

                    b.Property<string>("DivisionName")
                        .HasColumnType("TEXT");

                    b.Property<int>("DivisionNumber")
                        .HasColumnType("INTEGER");

                    b.Property<double>("GeneralAdminFee")
                        .HasColumnType("REAL");

                    b.Property<string>("PostalCode")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Division");
                });

            modelBuilder.Entity("API.Entities.FederalTax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("TaxPercentage")
                        .HasColumnType("REAL");

                    b.Property<int>("TaxTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TaxTypeId");

                    b.ToTable("Federal_Tax");
                });

            modelBuilder.Entity("API.Entities.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("TaxPercentage")
                        .HasColumnType("REAL");

                    b.Property<int>("TaxTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TaxTypeId");

                    b.ToTable("Province");
                });

            modelBuilder.Entity("API.Entities.TaxType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tax_Type");
                });

            modelBuilder.Entity("API.Entities.Class", b =>
                {
                    b.HasOne("API.Entities.Company", "Company")
                        .WithMany("Classes")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("API.Entities.Division", b =>
                {
                    b.HasOne("API.Entities.Company", "Company")
                        .WithMany("Divisions")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entities.Province", "Province")
                        .WithMany("Divisions")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("API.Entities.FederalTax", b =>
                {
                    b.HasOne("API.Entities.TaxType", "TaxType")
                        .WithMany("FederalTaxes")
                        .HasForeignKey("TaxTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaxType");
                });

            modelBuilder.Entity("API.Entities.Province", b =>
                {
                    b.HasOne("API.Entities.TaxType", "TaxType")
                        .WithMany("Provinces")
                        .HasForeignKey("TaxTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaxType");
                });

            modelBuilder.Entity("API.Entities.Company", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Divisions");
                });

            modelBuilder.Entity("API.Entities.Province", b =>
                {
                    b.Navigation("Divisions");
                });

            modelBuilder.Entity("API.Entities.TaxType", b =>
                {
                    b.Navigation("FederalTaxes");

                    b.Navigation("Provinces");
                });
#pragma warning restore 612, 618
        }
    }
}
